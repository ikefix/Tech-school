{"ast":null,"code":"const flatDeep = function (arr, d = 1) {\n  return d > 0 ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), []) : arr.slice();\n};\nconst slugify = function (text) {\n  return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n  .replace(/[^\\w-]+/g, '') // Remove all non-word chars\n  .replace(/--+/g, '-') // Replace multiple - with single -\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n};\n\nconst containsObject = function (obj, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].slug === obj.slug) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst formatPrice = number => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(number);\n};\nconst getUniqueValues = (data, type, withAll = 'active') => {\n  let unique = data.map(item => item[type]);\n  if (withAll === 'active') {\n    return ['all', ...new Set(unique)];\n  } else {\n    return [...new Set(unique)];\n  }\n};\nconst getUniqueValues2 = (data, itemName) => {\n  const items = data.map(item => {\n    return item.itemName;\n  });\n  let singleCatArray = flatDeep(items);\n  let itemArray = [];\n  singleCatArray.forEach(cat => {\n    const obj = {\n      title: cat.trim(),\n      slug: slugify(cat),\n      count: 1\n    };\n    const objIndex = containsObject(obj, itemArray);\n    if (objIndex !== -1) {\n      const prevCount = itemArray[objIndex].count;\n      itemArray[objIndex] = {\n        title: cat.trim(),\n        slug: slugify(cat),\n        count: prevCount + 1\n      };\n    } else {\n      itemArray.push(obj);\n    }\n  });\n};\nexport { flatDeep, slugify, containsObject, formatPrice, getUniqueValues, getUniqueValues2 };","map":{"version":3,"names":["flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","slugify","text","toString","toLowerCase","replace","containsObject","obj","list","i","length","slug","formatPrice","number","Intl","NumberFormat","style","currency","format","getUniqueValues","data","type","withAll","unique","map","item","Set","getUniqueValues2","itemName","items","singleCatArray","itemArray","forEach","cat","title","trim","count","objIndex","prevCount","push"],"sources":["C:/Users/HP/Documents/Edtech/edumel/src/utils/index.js"],"sourcesContent":["const flatDeep = function( arr, d = 1 ) {\r\n    return d > 0 ? arr.reduce( ( acc, val ) => acc.concat( Array.isArray (val ) ? flatDeep( val, d - 1 ) : val ), [] ) : arr.slice();\r\n}\r\n\r\nconst slugify = function( text ) {\r\n    return text\r\n        .toString()\r\n        .toLowerCase()\r\n        .replace( /\\s+/g, '-' ) // Replace spaces with -\r\n        .replace( /[^\\w-]+/g, '' ) // Remove all non-word chars\r\n        .replace( /--+/g, '-' ) // Replace multiple - with single -\r\n        .replace( /^-+/, '' ) // Trim - from start of text\r\n        .replace( /-+$/, '' ) // Trim - from end of text\r\n}\r\n\r\nconst containsObject = function( obj, list ) {\r\n    var i;\r\n    for ( i = 0; i < list.length; i++ ) {\r\n        if ( list[i].slug === obj.slug ) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nconst formatPrice = ( number ) => {\r\n    return new Intl.NumberFormat( 'en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    } ).format( number )\r\n}\r\n  \r\nconst getUniqueValues = ( data, type, withAll = 'active' ) => {\r\n    let unique = data.map( ( item ) => item[type] );\r\n    if ( withAll === 'active' ) {\r\n        return ['all', ...new Set( unique )];\r\n    } else {\r\n        return [...new Set( unique )];\r\n    }\r\n}\r\n\r\nconst getUniqueValues2 = ( data, itemName ) => {\r\n    const items = data.map(item => {\r\n        return item.itemName;\r\n    } );\r\n\r\n    let singleCatArray = flatDeep( items );\r\n    let itemArray = [];\r\n    singleCatArray.forEach( cat => {\r\n        const obj = {\r\n            title: cat.trim(),\r\n            slug: slugify( cat ),\r\n            count: 1\r\n        }\r\n        const objIndex = containsObject( obj, itemArray );\r\n        if( objIndex !== -1 ){\r\n            const prevCount = itemArray[objIndex].count;\r\n            itemArray[objIndex] = {\r\n                title: cat.trim(),\r\n                slug: slugify( cat ),\r\n                count: prevCount + 1\r\n            }\r\n        } else {\r\n            itemArray.push( obj );\r\n        }\r\n    } );\r\n}\r\n\r\nexport { flatDeep, slugify, containsObject, formatPrice, getUniqueValues, getUniqueValues2 }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}